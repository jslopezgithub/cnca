/* eslint-disable no-unreachable */
/* eslint-disable no-lone-blocks */
const db = require('../connection');

const tableName = 'activity_types'

function getAll(res) {

  console.log(res.method);
  

  return db
<<<<<<< HEAD
    .select('*')
    .from('activity_types')
    .then((data) => {
      res.send(data);
    })
    .catch((err) => {
=======
    .select()
    .from(table.tableName)
    .then(data => {
      res.send(data);
    })

    .catch(err => {
>>>>>>> 8a71d019d47aa464aa1c99724435c5bca65559af
      console.log(err);
    });
}

function getId(id, res) {
<<<<<<< HEAD

  return db(tableName)
    .select('*')
    .where('id', id)
    .then((data, err) => {
=======
  return db
    .select()
    .from(table.tableName)
    .where(table.idColumn, id)
    .then(data => {
>>>>>>> 8a71d019d47aa464aa1c99724435c5bca65559af
      res.send(data);
    })

    .catch(err => {
      console.log(err);
    });
}

function createType(activityName, res) {
  db.insert({ nome: activityName })
    .into(tableName)
    .then(() => {
      res.send({ message: 'OK' });
    })

    .catch(err => {
      console.log(err);
    });
}

function deleteType(_id, res) {
  db.delete()
    .where({ id: _id })
    .from(tableName)
    .then(() => {
      res.send({ message: 'OK' });
    })
<<<<<<< HEAD

    .catch((err) => {
=======
    .catch(err => {
>>>>>>> 8a71d019d47aa464aa1c99724435c5bca65559af
      console.log(err);

      if (err.errno === 1451) {
        res.send({
          message: 'DELETE_ERR',
          details: 'CONSTRAINT ERR: Activities depends on this activity type'
        });
      }

      res.send({
        message: 'ERR'
      });
    });
}

<<<<<<< HEAD



module.exports  = (req, res) => {

  switch (req.method) {
    case 'GET': {
      
      if (!req.query.id) {

        
        return getAll(res);
      } else {
        return getId(req.query.id, res);
      }
      
    } break;

    case 'POST': {
      console.log('posting');
      return createType(req.body.name, res);
    } break;

    case 'DELETE': {
      return deleteType(req.body.id, res);
    } break;

    default: getAll(res);
=======
const typeApi = (req, res) => {
  switch (req.method) {
    case 'GET':
      {
        if (!req.query.id) {
          getAll(res);
        }

        getId(req.query.id, res);
        return;
      }
      break;

    case 'POST':
      {
        console.log('posting');

        createType(req.body.name, res);
      }
      break;

    case 'DELETE':
      {
        deleteType(req.body.id, res);
      }
      break;

    default:
      getAll(req.body.name, res);
>>>>>>> 8a71d019d47aa464aa1c99724435c5bca65559af
  }

  next();

};